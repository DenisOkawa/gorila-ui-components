!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common"),require("@angular/material/card"),require("@angular/material/expansion"),require("@angular/material/grid-list"),require("@angular/material/input"),require("@angular/material/list"),require("@angular/material/select"),require("@angular/material/core"),require("@angular/forms"),require("ramda")):"function"==typeof define&&define.amd?define("@gorilainvest/gdk",["exports","@angular/core","@angular/common","@angular/material/card","@angular/material/expansion","@angular/material/grid-list","@angular/material/input","@angular/material/list","@angular/material/select","@angular/material/core","@angular/forms","ramda"],e):e(((t=t||self).gorilainvest=t.gorilainvest||{},t.gorilainvest.gdk={}),t.ng.core,t.ng.common,t.ng.material.card,t.ng.material.expansion,t.ng.material["grid-list"],t.ng.material.input,t.ng.material.list,t.ng.material.select,t.ng.material.core,t.ng.forms,t.ramda)}(this,function(t,e,r,n,a,i,l,o,s,d,m,g){"use strict";var p=function(){function t(){}return t.prototype.ngOnInit=function(){},t.decorators=[{type:e.Component,args:[{selector:"gdk-card",template:'<mat-card>\r\n  <ng-container *ngIf="title; else noTitleTemplate">\r\n    <mat-card-title>{{ title }}</mat-card-title>\r\n    <mat-card-subtitle *ngIf="subtitle">{{ subtitle }}</mat-card-subtitle>\r\n    <mat-card-content>\r\n      <mat-grid-list cols="5" rowHeight="50%">\r\n        <mat-grid-tile colspan="1" rowSpan="2" class="left-aside">\r\n          <mat-accordion>\r\n            <mat-expansion-panel expanded>\r\n              <mat-expansion-panel-header>\r\n                <mat-panel-title> Inputs: </mat-panel-title>\r\n              </mat-expansion-panel-header>\r\n              <aside class="card-body__configurations">\r\n                <ng-content select="mat-list[role=\'list\'].inputs"></ng-content>\r\n                <ng-container *ngIf="withoutInput">\r\n                  <mat-list role="list">\r\n                    <mat-list-item role="listitem"\r\n                      >No inputs provided</mat-list-item\r\n                    >\r\n                  </mat-list>\r\n                </ng-container>\r\n              </aside>\r\n            </mat-expansion-panel>\r\n            <mat-expansion-panel>\r\n              <mat-expansion-panel-header>\r\n                <mat-panel-title> Outputs: </mat-panel-title>\r\n              </mat-expansion-panel-header>\r\n              <aside class="card-body__configurations">\r\n                <ng-content select="mat-list[role=\'list\'].outputs"></ng-content>\r\n                <ng-container *ngIf="withoutOutput">\r\n                  <mat-list role="list">\r\n                    <mat-list-item role="listitem"\r\n                      >No outputs provided</mat-list-item\r\n                    >\r\n                  </mat-list>\r\n                </ng-container>\r\n              </aside>\r\n            </mat-expansion-panel>\r\n          </mat-accordion>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile colspan="3" rowSpan="1" class="visual">\r\n\r\n          <mat-grid-tile-header>\r\n            <h4 mat-line>\r\n              Visual result:\r\n            </h4>\r\n          </mat-grid-tile-header>\r\n\r\n          <ng-content select=".widget"></ng-content>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile colspan="3" rowSpan="1" class="code">\r\n          <mat-grid-tile-header>The fun part:</mat-grid-tile-header>\r\n          <ng-content select=".code"></ng-content>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile\r\n          *ngIf="summary"\r\n          colspan="1"\r\n          rowSpan="2"\r\n          class="right-aside"\r\n        >\r\n\r\n          <mat-grid-tile-header>\r\n            <h4 mat-line>\r\n              Summary:\r\n            </h4>\r\n          </mat-grid-tile-header>\r\n\r\n          <ng-content select="mat-list[role=\'list\'].summary"></ng-content>\r\n        </mat-grid-tile>\r\n      </mat-grid-list>\r\n    </mat-card-content>\r\n  </ng-container>\r\n  <ng-template #noTitleTemplate>\r\n    <mat-error><h1>Title is required!</h1></mat-error>\r\n  </ng-template>\r\n</mat-card>\r\n',encapsulation:e.ViewEncapsulation.None,styles:['gdk-card{display:block;height:100%}gdk-card .mat-expansion-panel{padding-bottom:15px}gdk-card .mat-card{height:calc(100% - 60px);min-height:400px;overflow:auto}gdk-card .card-body__configurations{width:100%}gdk-card .mat-accordion{height:100%;overflow-y:auto}gdk-card mat-form-field .mat-form-field-underline{position:static}gdk-card mat-form-field .mat-form-field-subscript-wrapper{position:static;max-width:180px}gdk-card .mat-card-content{height:calc(100% - 60px);min-height:400px}gdk-card .mat-card-content .mat-card-title{font-size:4rem}gdk-card .mat-card-content .mat-list[role=list]{display:-ms-grid;display:grid;grid-row-gap:10px;grid-auto-rows:auto}gdk-card .mat-grid-list{height:100%}gdk-card .mat-grid-list>div{display:-ms-grid;display:grid;grid-template-areas:"a b b b c" "a d d d c";-ms-grid-columns:1.3fr 1fr 1fr 1fr 0fr;grid-template-columns:1.3fr 1fr 1fr 1fr 0fr;-ms-grid-rows:1fr 1fr;grid-template-rows:1fr 1fr;height:100%;width:100%}gdk-card .mat-grid-list>div .mat-grid-tile{height:100%!important;left:unset!important;position:relative!important;top:unset!important;width:100%!important}gdk-card .mat-grid-list>div .mat-grid-tile .mat-figure{display:flex;flex-direction:column;justify-content:flex-start}gdk-card .mat-grid-list>div .mat-grid-tile-header{align-self:flex-start;background:0 0;color:#000;font-size:2rem;overflow:initial;position:relative}gdk-card .mat-grid-list>div .left-aside{-ms-grid-row:1;-ms-grid-row-span:2;-ms-grid-column:1;grid-area:a}gdk-card .mat-grid-list>div .visual{-ms-grid-row:1;-ms-grid-column:2;-ms-grid-column-span:3;grid-area:b}gdk-card .mat-grid-list>div .right-aside{-ms-grid-row:1;-ms-grid-row-span:2;-ms-grid-column:5;grid-area:c}gdk-card .mat-grid-list>div .code{-ms-grid-row:2;-ms-grid-column:2;-ms-grid-column-span:3;grid-area:d}']}]}],t.ctorParameters=function(){return[]},t.propDecorators={title:[{type:e.Input}],subtitle:[{type:e.Input}],summary:[{type:e.Input}],withoutInput:[{type:e.Input}],withoutOutput:[{type:e.Input}]},t}();var c=function(){function t(){this.moduleNameStr="",this.moduleTitle="",this.prefix="",this.keys=[],this.values={}}return Object.defineProperty(t.prototype,"moduleName",{set:function(t){this.moduleNameStr=t,this.moduleTitle=t.split("-").map(function(t){return t.charAt(0).toUpperCase()+t.slice(1)}).join("")},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"form",{set:function(t){var e=this;this.keys=g.keys(t.controls),this.values=t.value,t.valueChanges.subscribe(function(t){return e.values=t})},enumerable:!0,configurable:!0}),t.decorators=[{type:e.Component,args:[{selector:"gdk-import",template:'<pre>\r\n  <span>// module import</span>\r\n  <span>import &#123; {{moduleTitle}}Module &#125; from \'@gorilainvest/ui-toolkit/dist/{{moduleNameStr}}\';</span>\r\n  <span></span>\r\n  <ng-container *ngIf="!!prefix">\r\n    <span>// template.html</span>\r\n    <ng-container *ngIf="!!keys&&keys.length>0;else withoutParameters">\r\n      <ng-container *ngTemplateOutlet="withParameters"></ng-container>\r\n    </ng-container>\r\n    </ng-container>\r\n  <ng-content></ng-content>\r\n  <span></span>\r\n</pre>\r\n\r\n<ng-template #withoutParameters>\r\n  <span>\r\n    <ng-container *ngTemplateOutlet="openTag"></ng-container>\r\n    <ng-container *ngTemplateOutlet="closeTag"></ng-container>\r\n  </span>\r\n</ng-template>\r\n<ng-template #withParameters>\r\n  <span>\r\n    <ng-container *ngTemplateOutlet="openTag"></ng-container>\r\n  </span>\r\n  <ng-container *ngTemplateOutlet="displayParameters"></ng-container>\r\n  <span>\r\n    <ng-container *ngTemplateOutlet="closeTag"></ng-container>\r\n  </span>\r\n</ng-template>\r\n<ng-template #openTag>&lt;{{prefix}}-{{moduleNameStr}}</ng-template>\r\n<ng-template #closeTag>&gt;&lt;/{{prefix}}-{{moduleNameStr}}&gt;</ng-template>\r\n<ng-template #displayParameters>\r\n  <span *ngFor="let key of keys"> [{{key}}]=&quot;\'{{values[key]}}\'&quot;</span>\r\n<ng-template>\r\n',encapsulation:e.ViewEncapsulation.None,styles:[":host{overflow:hidden}gdk-import pre{display:flex;align-items:baseline;justify-content:center;flex-direction:column}gdk-import pre span:not(:first-child){margin-top:0}"]}]}],t.propDecorators={moduleName:[{type:e.Input}],prefix:[{type:e.Input}],form:[{type:e.Input}]},t}();var u=function(){function t(){}return t.decorators=[{type:e.NgModule,args:[{imports:[r.CommonModule,n.MatCardModule,d.MatCommonModule,a.MatExpansionModule,i.MatGridListModule,l.MatInputModule,o.MatListModule,s.MatSelectModule],declarations:[p,c],exports:[p,c]}]}],t}();t.GdkModule=u,t.ɵa=p,t.ɵb=c,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=gorilainvest-gdk.umd.min.js.map