{"version":3,"file":"gorilainvest-gdk.umd.js","sources":["ng://@gorilainvest/gdk/lib/gdk-card/gdk-card.component.ts","ng://@gorilainvest/gdk/lib/gdk-import/gdk-import.component.ts","ng://@gorilainvest/gdk/lib/gdk.module.ts"],"sourcesContent":["import { Component, Input, OnInit, ViewEncapsulation } from \"@angular/core\";\r\n\r\n/**\r\n * A card to be used for shell libs with input and output aside, a preview and code areas.\r\n */\r\n@Component({\r\n  selector: \"gdk-card\",\r\n  templateUrl: \"./gdk-card.component.html\",\r\n  styleUrls: [\"./gdk-card.component.scss\"],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class GdkCardComponent implements OnInit {\r\n  /**\r\n   * The title for the card.\r\n   */\r\n  @Input() title: string;\r\n\r\n  /**\r\n   * The subtitle for the card.\r\n   */\r\n  @Input() subtitle: string;\r\n\r\n  /**\r\n   * Flag to control right aside for summary info.\r\n   */\r\n  @Input() summary: boolean;\r\n\r\n  /**\r\n   * Flag to not show inputs in aside.\r\n   */\r\n  @Input() withoutInput: boolean;\r\n\r\n  /**\r\n   * Flag to not show outputs in aside.\r\n   */\r\n  @Input() withoutOutput: boolean;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { Component, Input, ViewEncapsulation } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { keys } from 'ramda';\r\n\r\n@Component({\r\n  selector: 'gdk-import',\r\n  templateUrl: './gdk-import.component.html',\r\n  styleUrls: ['./gdk-import.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class GdkImportComponent {\r\n  public moduleNameStr = '';\r\n  public moduleTitle = '';\r\n\r\n  /**\r\n   * The name of module separeted by hyphen without module prefix\r\n   * E.G. CardContainerModule send card-container as input but not gorilainvest-card-container.\r\n   * the prefix you must sent in the prefix input\r\n   */\r\n  @Input() public set moduleName(moduleName) {\r\n    this.moduleNameStr = moduleName;\r\n    this.moduleTitle = moduleName.split('-').map((name: string) => name.charAt(0).toUpperCase() + name.slice(1)).join('');\r\n  }\r\n\r\n\r\n  /**\r\n   * The prefix input. Can be gorilainvest, gro, gor, etc\r\n   */\r\n  @Input() public prefix = '';\r\n\r\n  public keys: string[] = [];\r\n  public values: {[s: string]: any} = {};\r\n\r\n\r\n  /**\r\n   * A form group where the keys are the component input names and\r\n   * the values are the component input values.\r\n   * (see currency-display into shell/layout/src/lib/ui folder)\r\n   */\r\n  @Input() public set form(form: FormGroup) {\r\n    this.keys = keys(form.controls);\r\n    this.values = form.value;\r\n    form.valueChanges.subscribe(data => this.values = data);\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MatExpansionModule } from \"@angular/material/expansion\";\r\nimport { MatGridListModule } from \"@angular/material/grid-list\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatListModule } from \"@angular/material/list\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { GdkCardComponent } from \"./gdk-card/gdk-card.component\";\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { GdkImportComponent } from './gdk-import/gdk-import.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatCardModule,\r\n    MatCommonModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatSelectModule\r\n  ],\r\n  declarations: [GdkCardComponent, GdkImportComponent],\r\n  exports: [GdkCardComponent, GdkImportComponent]\r\n})\r\nexport class GdkModule {}\r\n"],"names":["Component","ViewEncapsulation","Input","keys","NgModule","CommonModule","MatCardModule","MatCommonModule","MatExpansionModule","MatGridListModule","MatInputModule","MatListModule","MatSelectModule"],"mappings":";;;;;;;;;;IAAA;;;AAKA;QAgCE;SAAgB;;;;QAEhB,mCAAQ;;;QAAR,eAAa;;oBAlCdA,cAAS,SAAC;wBACT,QAAQ,EAAE,UAAU;wBACpB,sgGAAwC;wBAExC,aAAa,EAAEC,sBAAiB,CAAC,IAAI;;qBACtC;;;;;4BAKEC,UAAK;+BAKLA,UAAK;8BAKLA,UAAK;mCAKLA,UAAK;oCAKLA,UAAK;;QAKR,uBAAC;KAnCD,IAmCC;;;;;;QAzBC,iCAAuB;;;;;QAKvB,oCAA0B;;;;;QAK1B,mCAA0B;;;;;QAK1B,wCAA+B;;;;;QAK/B,yCAAgC;;;;;;;ACnClC;QAIA;YAOS,kBAAa,GAAG,EAAE,CAAC;YACnB,gBAAW,GAAG,EAAE,CAAC;;;;YAgBR,WAAM,GAAG,EAAE,CAAC;YAErB,SAAI,GAAa,EAAE,CAAC;YACpB,WAAM,GAAuB,EAAE,CAAC;SAaxC;QAzBC,sBAAoB,0CAAU;;;;;;;;;;;;;YAA9B,UAA+B,UAAU;gBACvC,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC;gBAChC,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG;;;;gBAAC,UAAC,IAAY,IAAK,OAAA,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAA,EAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACvH;;;WAAA;QAiBD,sBAAoB,oCAAI;;;;;;;;;;;;;YAAxB,UAAyB,IAAe;gBAAxC,iBAIC;gBAHC,IAAI,CAAC,IAAI,GAAGC,UAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAChC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;gBACzB,IAAI,CAAC,YAAY,CAAC,SAAS;;;;gBAAC,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,MAAM,GAAG,IAAI,GAAA,EAAC,CAAC;aACzD;;;WAAA;;oBAvCFH,cAAS,SAAC;wBACT,QAAQ,EAAE,YAAY;wBACtB,q0CAA0C;wBAE1C,aAAa,EAAEC,sBAAiB,CAAC,IAAI;;qBACtC;;;iCAUEC,UAAK;6BASLA,UAAK;2BAWLA,UAAK;;QAKR,yBAAC;KAxCD,IAwCC;;;QAjCC,2CAA0B;;QAC1B,yCAAwB;;;;;QAgBxB,oCAA4B;;QAE5B,kCAA2B;;QAC3B,oCAAuC;;;;;;;AC/BzC;QAYA;SAcyB;;oBAdxBE,aAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;4BACZC,kBAAa;4BACbC,sBAAe;4BACfC,4BAAkB;4BAClBC,0BAAiB;4BACjBC,oBAAc;4BACdC,kBAAa;4BACbC,sBAAe;yBAChB;wBACD,YAAY,EAAE,CAAC,gBAAgB,EAAE,kBAAkB,CAAC;wBACpD,OAAO,EAAE,CAAC,gBAAgB,EAAE,kBAAkB,CAAC;qBAChD;;QACuB,gBAAC;KAdzB;;;;;;;;;;;;;;"}